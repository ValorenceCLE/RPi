version: '3.8'
services:
  influxdb:
    image: influxdb:2.0
    volumes:
      - influxdb_data:/var/lib/influxdb2
    env_file:
      - ./config/influxdb.env
    ports:
      - "8086:8086"
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8086/health || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: on-failure
  
  redis:
    image: redis:7.4.1
    healthcheck:
      test: ["CMD", "redis-cli", "ping | grep PONG"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: on-failure

  nginx: 
    image: nginx:1.27.2 
    volumes:
      - ./config/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./etc/certs:/etc/nginx/certs  
      - ./web/app/static:/app/static
    ports:
      - "8000:8000"  # FastAPI HTTP port
      - "443:443"  # HTTPS port
    depends_on:
      - webapp 
    restart: on-failure 
      
  webapp:
    build:
      context: . 
      dockerfile: Dockerfile 
      target: webapp
    volumes:
      - ./etc/logs:/var/log/app 
      - ./etc/app_data:/app_data
      - ./etc/certs:/etc/nginx/certs
      - ./web/app:/app
    env_file:
      - ./config/app.env
    depends_on:
      - influxdb
      - redis
      - data_collection
    logging:
      driver: "none"
    restart: on-failure
    privileged: true # Required for GPIO control

  data_collection:
    build:
      context: . 
      dockerfile: Dockerfile
      target: data_collection
    volumes:
      - ./etc/logs:/var/log/app
      - ./data/app:/app
      - ./data/app/utils/json:/utils/json
      - ./aws/certs:/aws/certs
    env_file:
      - ./config/app.env
    depends_on:
      influxdb:
          condition: service_healthy
      redis:
          condition: service_healthy
    logging:
      driver: "none"
    restart: on-failure
    privileged: true # Required for GPIO control

volumes:
  influxdb_data:
